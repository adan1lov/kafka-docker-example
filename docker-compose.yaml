---
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=srvr,ruok"
    healthcheck:
      test: [ "CMD-SHELL", "echo ruok | nc localhost 2181 | grep imok || exit -1" ]
      start_period: 15s
      interval: 10s
      timeout: 3s
      retries: 12
  kafka:
    image: confluentinc/cp-kafka:7.0.1
    ports:
      - "9092:9092"
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_INTERNAL://:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:19092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: [ "CMD-SHELL", "nc -z localhost 9092 || exit -1" ]
      start_period: 15s
      interval: 10s
      timeout: 3s
      retries: 20
  schema_registry:
    image: confluentinc/cp-schema-registry:6.2.1
    container_name: schema_registry
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8085:8085"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema_registry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8085"
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:19092
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN: '*'
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_METHODS: 'GET,POST,PUT,OPTIONS'
    healthcheck:
      test: [ "CMD-SHELL", "nc -z localhost 8085 || exit -1" ]
      start_period: 15s
      interval: 10s
      timeout: 3s
      retries: 12

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:87ffb4716a2c634f3e68c8ce5a2a2a0e61203ee5
    depends_on:
      kafka:
        condition: service_completed_successfully
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: dev-env
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:19092
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema_registry:8085
